<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="_E_AppartmentsDataSet1" targetNamespace="http://tempuri.org/_E_AppartmentsDataSet1.xsd" xmlns:mstns="http://tempuri.org/_E_AppartmentsDataSet1.xsd" xmlns="http://tempuri.org/_E_AppartmentsDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="E_AppartmentsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="E_AppartmentsConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.E_Appartments.Properties.Settings.GlobalReference.Default.E_AppartmentsConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Colombo_1TableAdapter" GeneratorDataComponentClassName="Colombo_1TableAdapter" Name="Colombo_1" UserDataComponentName="Colombo_1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="E_AppartmentsConnectionString (Settings)" DbObjectName="[E-Appartments].dbo.Colombo_1" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Colombo_1] ([BuildingID], [ClassName], [AppartmentID], [ParkingID], [Status]) VALUES (@BuildingID, @ClassName, @AppartmentID, @ParkingID, @Status)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BuildingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BuildingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ClassName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AppartmentID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AppartmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ParkingID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ParkingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BuildingID, ClassName, AppartmentID, ParkingID, Status FROM dbo.Colombo_1</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BuildingID" DataSetColumn="BuildingID" />
              <Mapping SourceColumn="ClassName" DataSetColumn="ClassName" />
              <Mapping SourceColumn="AppartmentID" DataSetColumn="AppartmentID" />
              <Mapping SourceColumn="ParkingID" DataSetColumn="ParkingID" />
              <Mapping SourceColumn="Status" DataSetColumn="Status" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Colombo_4TableAdapter" GeneratorDataComponentClassName="Colombo_4TableAdapter" Name="Colombo_4" UserDataComponentName="Colombo_4TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="E_AppartmentsConnectionString (Settings)" DbObjectName="[E-Appartments].dbo.Colombo_4" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Colombo_4] WHERE (([BuildingID] = @Original_BuildingID) AND ([ClassName] = @Original_ClassName) AND ([AppartmentID] = @Original_AppartmentID) AND ([Status] = @Original_Status))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BuildingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BuildingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ClassName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AppartmentID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AppartmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Colombo_4] ([BuildingID], [ClassName], [AppartmentID], [Status]) VALUES (@BuildingID, @ClassName, @AppartmentID, @Status);
SELECT BuildingID, ClassName, AppartmentID, Status FROM Colombo_4 WHERE (AppartmentID = @AppartmentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BuildingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BuildingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ClassName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AppartmentID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AppartmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BuildingID, ClassName, AppartmentID, Status FROM dbo.Colombo_4</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Colombo_4] SET [BuildingID] = @BuildingID, [ClassName] = @ClassName, [AppartmentID] = @AppartmentID, [Status] = @Status WHERE (([BuildingID] = @Original_BuildingID) AND ([ClassName] = @Original_ClassName) AND ([AppartmentID] = @Original_AppartmentID) AND ([Status] = @Original_Status));
SELECT BuildingID, ClassName, AppartmentID, Status FROM Colombo_4 WHERE (AppartmentID = @AppartmentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BuildingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BuildingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ClassName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AppartmentID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AppartmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BuildingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BuildingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ClassName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AppartmentID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AppartmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BuildingID" DataSetColumn="BuildingID" />
              <Mapping SourceColumn="ClassName" DataSetColumn="ClassName" />
              <Mapping SourceColumn="AppartmentID" DataSetColumn="AppartmentID" />
              <Mapping SourceColumn="Status" DataSetColumn="Status" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Manager_LoginTableAdapter" GeneratorDataComponentClassName="Manager_LoginTableAdapter" Name="Manager_Login" UserDataComponentName="Manager_LoginTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="E_AppartmentsConnectionString (Settings)" DbObjectName="[E-Appartments].dbo.Manager_Login" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Manager_Login] WHERE (([ManagerID] = @Original_ManagerID) AND ([ManagerName] = @Original_ManagerName) AND ([ManagerUsername] = @Original_ManagerUsername) AND ([ManagerPassword] = @Original_ManagerPassword))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ManagerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ManagerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ManagerUsername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerUsername" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ManagerPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Manager_Login] ([ManagerID], [ManagerName], [ManagerUsername], [ManagerPassword]) VALUES (@ManagerID, @ManagerName, @ManagerUsername, @ManagerPassword);
SELECT ManagerID, ManagerName, ManagerUsername, ManagerPassword FROM Manager_Login WHERE (ManagerID = @ManagerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ManagerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ManagerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ManagerUsername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerUsername" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ManagerPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ManagerID, ManagerName, ManagerUsername, ManagerPassword FROM dbo.Manager_Login</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Manager_Login] SET [ManagerID] = @ManagerID, [ManagerName] = @ManagerName, [ManagerUsername] = @ManagerUsername, [ManagerPassword] = @ManagerPassword WHERE (([ManagerID] = @Original_ManagerID) AND ([ManagerName] = @Original_ManagerName) AND ([ManagerUsername] = @Original_ManagerUsername) AND ([ManagerPassword] = @Original_ManagerPassword));
SELECT ManagerID, ManagerName, ManagerUsername, ManagerPassword FROM Manager_Login WHERE (ManagerID = @ManagerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ManagerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ManagerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ManagerUsername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerUsername" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ManagerPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ManagerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ManagerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ManagerUsername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerUsername" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ManagerPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ManagerID" DataSetColumn="ManagerID" />
              <Mapping SourceColumn="ManagerName" DataSetColumn="ManagerName" />
              <Mapping SourceColumn="ManagerUsername" DataSetColumn="ManagerUsername" />
              <Mapping SourceColumn="ManagerPassword" DataSetColumn="ManagerPassword" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="_E_AppartmentsDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="_E_AppartmentsDataSet1" msprop:Generator_UserDSName="_E_AppartmentsDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Colombo_1" msprop:Generator_TableClassName="Colombo_1DataTable" msprop:Generator_TableVarName="tableColombo_1" msprop:Generator_TablePropName="Colombo_1" msprop:Generator_RowDeletingName="Colombo_1RowDeleting" msprop:Generator_RowChangingName="Colombo_1RowChanging" msprop:Generator_RowEvHandlerName="Colombo_1RowChangeEventHandler" msprop:Generator_RowDeletedName="Colombo_1RowDeleted" msprop:Generator_UserTableName="Colombo_1" msprop:Generator_RowChangedName="Colombo_1RowChanged" msprop:Generator_RowEvArgName="Colombo_1RowChangeEvent" msprop:Generator_RowClassName="Colombo_1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BuildingID" msprop:Generator_ColumnVarNameInTable="columnBuildingID" msprop:Generator_ColumnPropNameInRow="BuildingID" msprop:Generator_ColumnPropNameInTable="BuildingIDColumn" msprop:Generator_UserColumnName="BuildingID" type="xs:int" />
              <xs:element name="ClassName" msprop:Generator_ColumnVarNameInTable="columnClassName" msprop:Generator_ColumnPropNameInRow="ClassName" msprop:Generator_ColumnPropNameInTable="ClassNameColumn" msprop:Generator_UserColumnName="ClassName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AppartmentID" msprop:Generator_ColumnVarNameInTable="columnAppartmentID" msprop:Generator_ColumnPropNameInRow="AppartmentID" msprop:Generator_ColumnPropNameInTable="AppartmentIDColumn" msprop:Generator_UserColumnName="AppartmentID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ParkingID" msprop:Generator_ColumnVarNameInTable="columnParkingID" msprop:Generator_ColumnPropNameInRow="ParkingID" msprop:Generator_ColumnPropNameInTable="ParkingIDColumn" msprop:Generator_UserColumnName="ParkingID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Status" msprop:Generator_ColumnVarNameInTable="columnStatus" msprop:Generator_ColumnPropNameInRow="Status" msprop:Generator_ColumnPropNameInTable="StatusColumn" msprop:Generator_UserColumnName="Status">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Colombo_4" msprop:Generator_TableClassName="Colombo_4DataTable" msprop:Generator_TableVarName="tableColombo_4" msprop:Generator_TablePropName="Colombo_4" msprop:Generator_RowDeletingName="Colombo_4RowDeleting" msprop:Generator_RowChangingName="Colombo_4RowChanging" msprop:Generator_RowEvHandlerName="Colombo_4RowChangeEventHandler" msprop:Generator_RowDeletedName="Colombo_4RowDeleted" msprop:Generator_UserTableName="Colombo_4" msprop:Generator_RowChangedName="Colombo_4RowChanged" msprop:Generator_RowEvArgName="Colombo_4RowChangeEvent" msprop:Generator_RowClassName="Colombo_4Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BuildingID" msprop:Generator_ColumnVarNameInTable="columnBuildingID" msprop:Generator_ColumnPropNameInRow="BuildingID" msprop:Generator_ColumnPropNameInTable="BuildingIDColumn" msprop:Generator_UserColumnName="BuildingID" type="xs:int" />
              <xs:element name="ClassName" msprop:Generator_ColumnVarNameInTable="columnClassName" msprop:Generator_ColumnPropNameInRow="ClassName" msprop:Generator_ColumnPropNameInTable="ClassNameColumn" msprop:Generator_UserColumnName="ClassName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AppartmentID" msprop:Generator_ColumnVarNameInTable="columnAppartmentID" msprop:Generator_ColumnPropNameInRow="AppartmentID" msprop:Generator_ColumnPropNameInTable="AppartmentIDColumn" msprop:Generator_UserColumnName="AppartmentID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Status" msprop:Generator_ColumnVarNameInTable="columnStatus" msprop:Generator_ColumnPropNameInRow="Status" msprop:Generator_ColumnPropNameInTable="StatusColumn" msprop:Generator_UserColumnName="Status">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Manager_Login" msprop:Generator_TableClassName="Manager_LoginDataTable" msprop:Generator_TableVarName="tableManager_Login" msprop:Generator_TablePropName="Manager_Login" msprop:Generator_RowDeletingName="Manager_LoginRowDeleting" msprop:Generator_RowChangingName="Manager_LoginRowChanging" msprop:Generator_RowEvHandlerName="Manager_LoginRowChangeEventHandler" msprop:Generator_RowDeletedName="Manager_LoginRowDeleted" msprop:Generator_UserTableName="Manager_Login" msprop:Generator_RowChangedName="Manager_LoginRowChanged" msprop:Generator_RowEvArgName="Manager_LoginRowChangeEvent" msprop:Generator_RowClassName="Manager_LoginRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ManagerID" msprop:Generator_ColumnVarNameInTable="columnManagerID" msprop:Generator_ColumnPropNameInRow="ManagerID" msprop:Generator_ColumnPropNameInTable="ManagerIDColumn" msprop:Generator_UserColumnName="ManagerID" type="xs:int" />
              <xs:element name="ManagerName" msprop:Generator_ColumnVarNameInTable="columnManagerName" msprop:Generator_ColumnPropNameInRow="ManagerName" msprop:Generator_ColumnPropNameInTable="ManagerNameColumn" msprop:Generator_UserColumnName="ManagerName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ManagerUsername" msprop:Generator_ColumnVarNameInTable="columnManagerUsername" msprop:Generator_ColumnPropNameInRow="ManagerUsername" msprop:Generator_ColumnPropNameInTable="ManagerUsernameColumn" msprop:Generator_UserColumnName="ManagerUsername">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ManagerPassword" msprop:Generator_ColumnVarNameInTable="columnManagerPassword" msprop:Generator_ColumnPropNameInRow="ManagerPassword" msprop:Generator_ColumnPropNameInTable="ManagerPasswordColumn" msprop:Generator_UserColumnName="ManagerPassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Colombo_4" />
      <xs:field xpath="mstns:AppartmentID" />
    </xs:unique>
    <xs:unique name="Manager_Login_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Manager_Login" />
      <xs:field xpath="mstns:ManagerID" />
    </xs:unique>
  </xs:element>
</xs:schema>